<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title %> | FC店舗管理システム</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css"
      rel="stylesheet"
    />
    <style>
      body {
        background-color: #f8f9fa;
      }
      .navbar-brand {
        font-weight: bold;
      }
      .card {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        border: none;
      }
      .info-label {
        font-weight: 600;
        color: #495057;
      }
      .info-value {
        color: #212529;
      }
      .stats-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
      }
    </style>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
      <div class="container">
        <a class="navbar-brand" href="/">
          <i class="bi bi-shop"></i> FC店舗管理システム
        </a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNav"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav me-auto">
            <li class="nav-item">
              <a class="nav-link" href="/">
                <i class="bi bi-house"></i> ダッシュボード
              </a>
            </li>
            <% if (session && session.user && session.user.role === 'admin') {
            %>
            <li class="nav-item">
              <a class="nav-link" href="/stores/list">
                <i class="bi bi-building"></i> 店舗管理
              </a>
            </li>
            <% } %>
            <li class="nav-item">
              <a class="nav-link active" href="/customers/list">
                <i class="bi bi-people"></i> 顧客管理
              </a>
            </li>
          </ul>
          <ul class="navbar-nav">
            <li class="nav-item dropdown">
              <a
                class="nav-link dropdown-toggle"
                href="#"
                role="button"
                data-bs-toggle="dropdown"
              >
                <i class="bi bi-person-circle"></i> <%= session.user.email %>
              </a>
              <ul class="dropdown-menu">
                <li>
                  <a class="dropdown-item" href="/auth/logout">ログアウト</a>
                </li>
              </ul>
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <div class="container mt-4">
      <div class="row">
        <div class="col-12">
          <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h3 mb-0">
              <i class="bi bi-person text-primary"></i> 顧客詳細
            </h1>
            <div>
              <a href="/customers/list" class="btn btn-secondary me-2">
                <i class="bi bi-arrow-left"></i> 一覧に戻る
              </a>
              <a
                href="/customers/edit/<%= customer.id %>"
                class="btn btn-warning me-2"
              >
                <i class="bi bi-pencil"></i> 編集
              </a>
              <button
                type="button"
                class="btn btn-danger"
                onclick="confirmDelete(<%= customer.id %>, '<%= customer.name %>')"
              >
                <i class="bi bi-trash"></i> 削除
              </button>
            </div>
          </div>

          <div class="row">
            <!-- 基本情報 -->
            <div class="col-lg-8">
              <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                  <h5 class="mb-0">
                    <i class="bi bi-person-badge"></i> 基本情報
                  </h5>
                </div>
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6 mb-3">
                      <div class="info-label">顧客コード</div>
                      <div class="info-value">
                        <% if (customer.customer_code) { %>
                        <code class="fs-6"><%= customer.customer_code %></code>
                        <% } else { %>
                        <span class="text-muted">未設定</span>
                        <% } %>
                      </div>
                    </div>
                    <div class="col-md-6 mb-3">
                      <div class="info-label">顧客名</div>
                      <div class="info-value">
                        <strong class="fs-5"><%= customer.name %></strong>
                      </div>
                    </div>
                    <div class="col-md-6 mb-3">
                      <div class="info-label">フリガナ</div>
                      <div class="info-value">
                        <%= customer.kana || '未設定' %>
                      </div>
                    </div>
                    <div class="col-md-6 mb-3">
                      <div class="info-label">性別</div>
                      <div class="info-value">
                        <% if (customer.gender) { %>
                        <span class="badge bg-secondary"
                          ><%= customer.gender %></span
                        >
                        <% } else { %>
                        <span class="text-muted">未設定</span>
                        <% } %>
                      </div>
                    </div>
                    <div class="col-md-6 mb-3">
                      <div class="info-label">生年月日</div>
                      <div class="info-value">
                        <% if (customer.birth_date) { %> <%= new
                        Date(customer.birth_date).toLocaleDateString('ja-JP') %>
                        <% const age = Math.floor((new Date() - new
                        Date(customer.birth_date)) / (365.25 * 24 * 60 * 60 *
                        1000)); %>
                        <span class="text-muted">（<%= age %>歳）</span>
                        <% } else { %>
                        <span class="text-muted">未設定</span>
                        <% } %>
                      </div>
                    </div>
                    <% if (isAdmin && customer.store_name) { %>
                    <div class="col-md-6 mb-3">
                      <div class="info-label">所属店舗</div>
                      <div class="info-value">
                        <span class="badge bg-info"
                          ><%= customer.store_name %></span
                        >
                      </div>
                    </div>
                    <% } %>
                    <div class="col-md-6 mb-3">
                      <div class="info-label">登録日</div>
                      <div class="info-value">
                        <% if (customer.registration_date) { %> <%= new
                        Date(customer.registration_date).toLocaleDateString('ja-JP')
                        %> <% } else { %>
                        <span class="text-muted">不明</span>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <!-- 連絡先情報 -->
              <div class="card mb-4">
                <div class="card-header bg-info text-white">
                  <h5 class="mb-0">
                    <i class="bi bi-telephone"></i> 連絡先情報
                  </h5>
                </div>
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6 mb-3">
                      <div class="info-label">電話番号</div>
                      <div class="info-value">
                        <% if (customer.phone) { %>
                        <a href="tel:<%= customer.phone %>">
                          <i class="bi bi-telephone"></i> <%= customer.phone %>
                        </a>
                        <% } else { %>
                        <span class="text-muted">未設定</span>
                        <% } %>
                      </div>
                    </div>
                    <div class="col-md-6 mb-3">
                      <div class="info-label">メールアドレス</div>
                      <div class="info-value">
                        <% if (customer.email) { %>
                        <a href="mailto:<%= customer.email %>">
                          <i class="bi bi-envelope"></i> <%= customer.email %>
                        </a>
                        <% } else { %>
                        <span class="text-muted">未設定</span>
                        <% } %>
                      </div>
                    </div>
                    <div class="col-12 mb-3">
                      <div class="info-label">住所</div>
                      <div class="info-value">
                        <% if (customer.address) { %>
                        <i class="bi bi-geo-alt"></i> <%= customer.address %> <%
                        } else { %>
                        <span class="text-muted">未設定</span>
                        <% } %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <!-- 備考 -->
              <% if (customer.notes) { %>
              <div class="card mb-4">
                <div class="card-header bg-warning text-dark">
                  <h5 class="mb-0"><i class="bi bi-sticky"></i> 備考</h5>
                </div>
                <div class="card-body">
                  <p class="mb-0"><%= customer.notes %></p>
                </div>
              </div>
              <% } %>
            </div>

            <!-- 統計情報 -->
            <div class="col-lg-4">
              <div class="card stats-card mb-4">
                <div class="card-header">
                  <h5 class="mb-0"><i class="bi bi-graph-up"></i> 購入統計</h5>
                </div>
                <div class="card-body">
                  <div class="text-center mb-3">
                    <div class="display-4 fw-bold">
                      <%= customer.visit_count || 0 %>
                    </div>
                    <div>来店回数</div>
                  </div>
                  <div class="text-center mb-3">
                    <div class="h2 fw-bold">
                      ¥<%= (customer.total_purchase_amount ||
                      0).toLocaleString() %>
                    </div>
                    <div>総購入金額</div>
                  </div>
                  <div class="text-center">
                    <div class="h5">
                      <% if (customer.last_visit_date) { %> <%= new
                      Date(customer.last_visit_date).toLocaleDateString('ja-JP')
                      %> <% } else { %>
                      <span class="text-muted">未来店</span>
                      <% } %>
                    </div>
                    <div>最終来店日</div>
                  </div>
                </div>
              </div>

              <!-- 平均購入単価 -->
              <div class="card bg-success text-white mb-4">
                <div class="card-body text-center">
                  <h3 class="mb-0">
                    <% if (customer.visit_count > 0) { %> ¥<%=
                    Math.round((customer.total_purchase_amount || 0) /
                    customer.visit_count).toLocaleString() %> <% } else { %> ¥0
                    <% } %>
                  </h3>
                  <p class="mb-0">平均購入単価</p>
                </div>
              </div>

              <!-- 顧客ランク -->
              <div class="card mb-4">
                <div class="card-header">
                  <h6 class="mb-0"><i class="bi bi-star"></i> 顧客ランク</h6>
                </div>
                <div class="card-body text-center">
                  <% let rank = 'ブロンズ'; let rankColor = 'secondary'; const
                  totalAmount = customer.total_purchase_amount || 0; if
                  (totalAmount >= 100000) { rank = 'プラチナ'; rankColor =
                  'dark'; } else if (totalAmount >= 50000) { rank = 'ゴールド';
                  rankColor = 'warning'; } else if (totalAmount >= 20000) { rank
                  = 'シルバー'; rankColor = 'info'; } %>
                  <span class="badge bg-<%= rankColor %> fs-6"
                    ><%= rank %></span
                  >
                  <div class="mt-2 small text-muted">
                    <% if (rank === 'ブロンズ') { %> シルバーまで¥<%= (20000 -
                    totalAmount).toLocaleString() %> <% } else if (rank ===
                    'シルバー') { %> ゴールドまで¥<%= (50000 -
                    totalAmount).toLocaleString() %> <% } else if (rank ===
                    'ゴールド') { %> プラチナまで¥<%= (100000 -
                    totalAmount).toLocaleString() %> <% } else { %>
                    最高ランクです！ <% } %>
                  </div>
                </div>
              </div>

              <!-- 更新日時 -->
              <div class="card">
                <div class="card-body small text-muted">
                  <div class="mb-2">
                    <i class="bi bi-calendar-plus"></i>
                    作成日: <%= new
                    Date(customer.created_at).toLocaleString('ja-JP') %>
                  </div>
                  <div>
                    <i class="bi bi-calendar-check"></i>
                    更新日: <%= new
                    Date(customer.updated_at).toLocaleString('ja-JP') %>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- 取引履歴セクション -->
    <div class="row mt-4">
      <div class="col-12">
        <div class="card">
          <div class="card-header bg-info text-white">
            <div class="d-flex justify-content-between align-items-center">
              <h5 class="mb-0"><i class="bi bi-receipt"></i> 取引履歴</h5>
              <div class="btn-group">
                <button
                  type="button"
                  class="btn btn-light btn-sm"
                  onclick="refreshTransactions()"
                >
                  <i class="bi bi-arrow-clockwise"></i> 更新
                </button>
                <a href="/sales/new" class="btn btn-success btn-sm">
                  <i class="bi bi-plus-circle"></i> 新規取引登録
                </a>
              </div>
            </div>
          </div>
          <div class="card-body">
            <!-- 統計情報 -->
            <div id="transactionSummary" class="row mb-4">
              <div class="col-md-3">
                <div class="card bg-primary text-white">
                  <div class="card-body text-center">
                    <h6 class="card-title">取引回数</h6>
                    <h4 id="totalTransactions">-</h4>
                  </div>
                </div>
              </div>
              <div class="col-md-3">
                <div class="card bg-success text-white">
                  <div class="card-body text-center">
                    <h6 class="card-title">累計金額</h6>
                    <h4 id="totalAmount">-</h4>
                  </div>
                </div>
              </div>
              <div class="col-md-3">
                <div class="card bg-warning text-white">
                  <div class="card-body text-center">
                    <h6 class="card-title">平均単価</h6>
                    <h4 id="averageAmount">-</h4>
                  </div>
                </div>
              </div>
              <div class="col-md-3">
                <div class="card bg-info text-white">
                  <div class="card-body text-center">
                    <h6 class="card-title">最終取引</h6>
                    <h6 id="lastTransaction">-</h6>
                  </div>
                </div>
              </div>
            </div>

            <!-- 月次グラフ -->
            <div class="row mb-4">
              <div class="col-12">
                <div class="card">
                  <div class="card-header">
                    <h6 class="mb-0">月次売上推移</h6>
                  </div>
                  <div class="card-body">
                    <canvas id="monthlyChart" width="400" height="200"></canvas>
                  </div>
                </div>
              </div>
            </div>

            <!-- 取引履歴テーブル -->
            <div class="table-responsive">
              <table class="table table-hover" id="transactionsTable">
                <thead class="table-dark">
                  <tr>
                    <th>取引日</th>
                    <th>金額</th>
                    <th>取引内容</th>
                    <th>支払方法</th>
                    <th>店舗</th>
                    <th>登録日時</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td colspan="6" class="text-center">
                      <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">読み込み中...</span>
                      </div>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>

            <!-- ページネーション（将来的に実装） -->
            <nav aria-label="取引履歴ページネーション" class="mt-3">
              <ul
                class="pagination justify-content-center"
                id="paginationContainer"
                style="display: none"
              >
                <!-- ページネーションボタンが動的に追加されます -->
              </ul>
            </nav>
          </div>
        </div>
      </div>
    </div>

    <!-- 削除確認モーダル -->
    <div class="modal fade" id="deleteModal" tabindex="-1">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">顧客削除の確認</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
            ></button>
          </div>
          <div class="modal-body">
            <p>以下の顧客を削除してもよろしいですか？</p>
            <p><strong id="deleteCustomerName"></strong></p>
            <p class="text-danger">
              <i class="bi bi-exclamation-triangle"></i>
              この操作は元に戻せません。
            </p>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              キャンセル
            </button>
            <form id="deleteForm" method="post" style="display: inline">
              <button type="submit" class="btn btn-danger">削除する</button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
      // 削除確認
      function confirmDelete(customerId, customerName) {
        document.getElementById("deleteCustomerName").textContent =
          customerName;
        document.getElementById(
          "deleteForm"
        ).action = `/customers/delete/${customerId}`;
        new bootstrap.Modal(document.getElementById("deleteModal")).show();
      }

      // 取引履歴管理
      let transactionChart = null;
      const customerId = <%= customer.id %>;

      // ページ読み込み時に取引履歴を読み込み
      document.addEventListener('DOMContentLoaded', function() {
        loadTransactions();
      });

      // 取引履歴を読み込む関数
      async function loadTransactions() {
        try {
          const response = await fetch(`/customers/${customerId}/transactions`);
          const data = await response.json();

          if (response.ok) {
            updateTransactionSummary(data.summary);
            updateTransactionTable(data.transactions);
            updateMonthlyChart(data.monthly_data);
          } else {
            throw new Error(data.error || '取引履歴の取得に失敗しました');
          }
        } catch (error) {
          console.error('取引履歴読み込みエラー:', error);
          showError('取引履歴の読み込みに失敗しました: ' + error.message);
        }
      }

      // 統計情報を更新
      function updateTransactionSummary(summary) {
        document.getElementById('totalTransactions').textContent = summary.transaction_count.toLocaleString();
        document.getElementById('totalAmount').textContent = '¥' + summary.total_amount.toLocaleString();
        document.getElementById('averageAmount').textContent = '¥' + summary.average_amount.toLocaleString();

        if (summary.last_visit) {
          const lastVisit = new Date(summary.last_visit);
          document.getElementById('lastTransaction').textContent = lastVisit.toLocaleDateString('ja-JP');
        } else {
          document.getElementById('lastTransaction').textContent = '未記録';
        }
      }

      // 取引履歴テーブルを更新
      function updateTransactionTable(transactions) {
        const tbody = document.querySelector('#transactionsTable tbody');

        if (transactions.length === 0) {
          tbody.innerHTML = `
            <tr>
              <td colspan="6" class="text-center text-muted">
                <i class="bi bi-inbox"></i>
                取引履歴がありません
              </td>
            </tr>
          `;
          return;
        }

        tbody.innerHTML = transactions.map(transaction => {
          const transactionDate = new Date(transaction.transaction_date);
          const createdAt = new Date(transaction.created_at);

          return `
            <tr>
              <td>${transactionDate.toLocaleDateString('ja-JP')}</td>
              <td class="fw-bold text-success">¥${transaction.amount.toLocaleString()}</td>
              <td>${transaction.description || '-'}</td>
              <td>
                <span class="badge ${getPaymentMethodBadgeClass(transaction.payment_method)}">
                  ${transaction.payment_method || '現金'}
                </span>
              </td>
              <td>${transaction.store_name || '-'}</td>
              <td class="small text-muted">${createdAt.toLocaleString('ja-JP')}</td>
            </tr>
          `;
        }).join('');
      }

      // 支払方法のバッジクラスを取得
      function getPaymentMethodBadgeClass(method) {
        switch (method) {
          case 'クレジットカード': return 'bg-primary';
          case 'QR決済': return 'bg-info';
          case 'その他': return 'bg-warning';
          default: return 'bg-secondary';
        }
      }

      // 月次グラフを更新
      function updateMonthlyChart(monthlyData) {
        const ctx = document.getElementById('monthlyChart').getContext('2d');

        if (transactionChart) {
          transactionChart.destroy();
        }

        if (monthlyData.length === 0) {
          ctx.font = '16px Arial';
          ctx.fillStyle = '#666';
          ctx.textAlign = 'center';
          ctx.fillText('データがありません', ctx.canvas.width / 2, ctx.canvas.height / 2);
          return;
        }

        // データを時系列順にソート
        const sortedData = monthlyData.sort((a, b) => a.month.localeCompare(b.month));

        transactionChart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: sortedData.map(d => d.month),
            datasets: [{
              label: '月次売上',
              data: sortedData.map(d => d.amount),
              borderColor: 'rgb(75, 192, 192)',
              backgroundColor: 'rgba(75, 192, 192, 0.2)',
              tension: 0.1,
              fill: true
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
              y: {
                beginAtZero: true,
                ticks: {
                  callback: function(value) {
                    return '¥' + value.toLocaleString();
                  }
                }
              }
            },
            plugins: {
              tooltip: {
                callbacks: {
                  label: function(context) {
                    return context.dataset.label + ': ¥' + context.parsed.y.toLocaleString();
                  }
                }
              }
            }
          }
        });
      }

      // 取引履歴を更新
      function refreshTransactions() {
        // ボタンを無効化
        const refreshBtn = document.querySelector('button[onclick="refreshTransactions()"]');
        const originalText = refreshBtn.innerHTML;
        refreshBtn.innerHTML = '<i class="bi bi-hourglass-split"></i> 更新中...';
        refreshBtn.disabled = true;

        // テーブルにローディング表示
        const tbody = document.querySelector('#transactionsTable tbody');
        tbody.innerHTML = `
          <tr>
            <td colspan="6" class="text-center">
              <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">更新中...</span>
              </div>
            </td>
          </tr>
        `;

        // データを再読み込み
        loadTransactions().finally(() => {
          refreshBtn.innerHTML = originalText;
          refreshBtn.disabled = false;
        });
      }

      // エラーメッセージを表示
      function showError(message) {
        const alertDiv = document.createElement('div');
        alertDiv.className = 'alert alert-danger alert-dismissible fade show mt-3';
        alertDiv.innerHTML = `
          <i class="bi bi-exclamation-triangle"></i>
          ${message}
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;

        const transactionCard = document.querySelector('#transactionSummary').closest('.card-body');
        transactionCard.insertBefore(alertDiv, transactionCard.firstChild);
      }
    </script>
  </body>
</html>
