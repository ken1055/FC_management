<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <title>商品資料格納庫 - 代理店管理システム</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css"
    />
  </head>
  <body class="container py-5">
    <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4 rounded">
      <div class="container-fluid">
        <a class="navbar-brand" href="/">代理店管理システム</a>
        <div class="collapse navbar-collapse">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <% if (typeof session !== 'undefined' && session && session.user &&
            session.user.role === 'admin') { %>
            <li class="nav-item">
              <a class="nav-link" href="/agencies/list">代理店一覧</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/sales/list">売上管理</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/groups/list">グループ管理</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/api/users/list">アカウント管理</a>
            </li>
            <% } %> <% if (typeof session !== 'undefined' && session &&
            session.user && session.user.role === 'agency') { %>
            <li class="nav-item">
              <a class="nav-link text-warning" href="/auth/promote"
                >管理者・役員に切り替え</a
              >
            </li>
            <% if (session.user.agency_id) { %>
            <li class="nav-item">
              <a
                class="nav-link"
                href="/agencies/profile/<%= session.user.agency_id %>"
                >マイプロフィール</a
              >
            </li>
            <% } %>
            <li class="nav-item">
              <a class="nav-link" href="/sales/list">売上管理</a>
            </li>
            <% if (session.user.agency_id) { %>
            <li class="nav-item">
              <a
                class="nav-link"
                href="/materials/<%= session.user.agency_id %>"
                >商品資料格納庫</a
              >
            </li>
            <% } %> <% } %> <% if (typeof session !== 'undefined' && session &&
            session.user && (session.user.role === 'admin')) { %> <% } %> <% if
            (typeof session !== 'undefined' && session && session.user) { %>
            <li class="nav-item">
              <a class="nav-link" href="/auth/logout">ログアウト</a>
            </li>
            <% } else { %>
            <li class="nav-item">
              <a class="nav-link" href="/auth/login">ログイン</a>
            </li>
            <% } %>
          </ul>
        </div>
      </div>
    </nav>

    <div class="card shadow-sm p-4 mb-4">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
          <h2 class="mb-1">商品資料格納庫</h2>
          <% if (agency_name) { %>
          <p class="text-muted mb-0"><%= agency_name %> の資料</p>
          <% } %>
        </div>
        <div>
          <% if (session.user.role === 'agency') { %>
          <a href="/" class="btn btn-secondary">ダッシュボードへ戻る</a>
          <% } else if (session.user.role === 'admin') { %>
          <a href="/agencies/list" class="btn btn-secondary"
            >代理店一覧へ戻る</a
          >
          <% } %>
        </div>
      </div>

      <!-- 管理者用アップロード機能 -->
      <% if (session.user.role === 'admin' && agency_id) { %>
      <div class="card mb-4 border-success">
        <div class="card-header bg-success text-white">
          <h5 class="mb-0">ファイルアップロード（管理者のみ）</h5>
        </div>
        <div class="card-body">
          <form
            method="post"
            action="/materials/upload/<%= agency_id %>"
            enctype="multipart/form-data"
          >
            <div class="mb-3">
              <label class="form-label">ファイル選択</label>
              <input
                type="file"
                name="file"
                class="form-control"
                required
                accept=".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.jpg,.jpeg,.png,.gif"
              />
              <small class="form-text text-muted">
                対応形式: PDF, Word, Excel, PowerPoint, 画像ファイル
              </small>
            </div>
            <div class="mb-3">
              <label class="form-label">説明・補足情報（任意）</label>
              <textarea
                name="description"
                class="form-control"
                rows="3"
                placeholder="例: 商品カタログ、価格表、使用方法など..."
              ></textarea>
              <small class="form-text text-muted">
                ファイルの内容や用途について説明を入力してください
              </small>
            </div>
            <div class="d-grid">
              <button type="submit" class="btn btn-success">
                <i class="bi bi-upload"></i> アップロード
              </button>
            </div>
          </form>
        </div>
      </div>
      <% } %>

      <!-- 代理店ユーザー向け情報 -->
      <% if (session.user.role === 'agency') { %>
      <div class="alert alert-info">
        <i class="bi bi-info-circle"></i>
        <strong>商品資料について:</strong>
        こちらでは取り扱い商品に関する資料をダウンロードできます。新しい資料が追加された場合は通知いたします。
      </div>
      <% } %>

      <!-- ファイル一覧 -->
      <% if (files.length === 0) { %>
      <div class="text-center py-5">
        <i class="bi bi-folder2-open fs-1 text-muted"></i>
        <h5 class="mt-3 text-muted">資料がありません</h5>
        <p class="text-muted">
          <% if (session.user.role === 'agency') { %>
          まだ資料がアップロードされていません。管理者からの連絡をお待ちください。
          <% } else { %> まだファイルがアップロードされていません。 <% } %>
        </p>
      </div>
      <% } else { %>

      <!-- ファイル検索・フィルタ -->
      <div class="mb-3">
        <div class="row">
          <div class="col-md-6">
            <div class="input-group">
              <span class="input-group-text"><i class="bi bi-search"></i></span>
              <input
                type="text"
                class="form-control"
                id="fileSearch"
                placeholder="ファイル名で検索..."
              />
            </div>
          </div>
          <div class="col-md-6">
            <select class="form-select" id="fileTypeFilter">
              <option value="">すべてのファイル</option>
              <option value="pdf">PDF</option>
              <option value="doc">Word文書</option>
              <option value="xls">Excel</option>
              <option value="ppt">PowerPoint</option>
              <option value="image">画像</option>
            </select>
          </div>
        </div>
      </div>

      <!-- ファイル一覧テーブル -->
      <div class="table-responsive">
        <table class="table table-hover" id="filesTable">
          <thead class="table-dark">
            <tr>
              <th><i class="bi bi-file-earmark"></i> ファイル名</th>
              <% if (!agency_id && session.user.role === 'admin') { %>
              <th><i class="bi bi-building"></i> 代理店</th>
              <% } %>
              <th><i class="bi bi-calendar"></i> アップロード日時</th>
              <th><i class="bi bi-gear"></i> 操作</th>
            </tr>
          </thead>
          <tbody>
            <% files.forEach(f => { %>
            <tr
              class="file-row"
              data-filename="<%= f.originalname.toLowerCase() %>"
              data-type="<%= f.originalname.split('.').pop().toLowerCase() %>"
            >
              <td>
                <div class="d-flex align-items-center">
                  <% const ext = f.originalname.split('.').pop().toLowerCase();
                  let iconClass = 'bi-file-earmark'; let iconColor =
                  'text-secondary'; if (['pdf'].includes(ext)) { iconClass =
                  'bi-file-earmark-pdf'; iconColor = 'text-danger'; } else if
                  (['doc', 'docx'].includes(ext)) { iconClass =
                  'bi-file-earmark-word'; iconColor = 'text-primary'; } else if
                  (['xls', 'xlsx'].includes(ext)) { iconClass =
                  'bi-file-earmark-excel'; iconColor = 'text-success'; } else if
                  (['ppt', 'pptx'].includes(ext)) { iconClass =
                  'bi-file-earmark-ppt'; iconColor = 'text-warning'; } else if
                  (['jpg', 'jpeg', 'png', 'gif'].includes(ext)) { iconClass =
                  'bi-file-earmark-image'; iconColor = 'text-info'; } %>
                  <i class="bi <%= iconClass %> fs-4 me-2 <%= iconColor %>"></i>
                  <div>
                    <div class="fw-medium"><%= f.originalname %></div>
                    <% if (f.description && f.description.trim()) { %>
                    <small class="text-muted">
                      <i class="bi bi-info-circle me-1"></i>
                      <%= (f.description.length > 60) ?
                      f.description.substring(0, 60) + '...' : f.description %>
                    </small>
                    <% } else { %>
                    <small class="text-muted">説明なし</small>
                    <% } %>
                  </div>
                </div>
              </td>
              <% if (!agency_id && session.user.role === 'admin') { %>
              <td><%= f.agency_name || '未設定' %></td>
              <% } %>
              <td>
                <div>
                  <%= new Date(f.uploaded_at).toLocaleDateString('ja-JP') %>
                </div>
                <small class="text-muted">
                  <%= new Date(f.uploaded_at).toLocaleTimeString('ja-JP') %>
                </small>
              </td>
              <td>
                <div class="btn-group" role="group">
                  <!-- 詳細・プレビューボタン -->
                  <button
                    type="button"
                    class="btn btn-sm btn-outline-info"
                    onclick="showFileDetails(<%= f.id %>)"
                    title="詳細・プレビュー"
                  >
                    <i class="bi bi-eye"></i>
                  </button>

                  <a
                    href="/materials/download/<%= f.id %>"
                    class="btn btn-sm btn-outline-primary"
                    title="ダウンロード"
                  >
                    <i class="bi bi-download"></i>
                  </a>
                  <% if (session.user.role === 'admin') { %>
                  <form
                    method="post"
                    action="/materials/delete/<%= f.id %>"
                    style="display: inline"
                    onsubmit="return confirm('「<%= f.originalname %>」を削除しますか？')"
                  >
                    <button
                      type="submit"
                      class="btn btn-sm btn-outline-danger"
                      title="削除"
                    >
                      <i class="bi bi-trash"></i>
                    </button>
                  </form>
                  <% } %>
                </div>
              </td>
            </tr>
            <% }) %>
          </tbody>
        </table>
      </div>

      <!-- ファイル統計情報 -->
      <div class="mt-3">
        <small class="text-muted">
          合計 <span id="fileCount"><%= files.length %></span> 件のファイル <%
          if (session.user.role === 'agency') { %> |
          最新の資料を定期的にご確認ください <% } %>
        </small>
      </div>
      <% } %>
    </div>

    <!-- ファイル詳細・プレビューモーダル -->
    <div
      class="modal fade"
      id="fileDetailsModal"
      tabindex="-1"
      aria-labelledby="fileDetailsModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="fileDetailsModalLabel">ファイル詳細</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body">
            <div id="fileDetailsContent">
              <div class="text-center">
                <div class="spinner-border" role="status">
                  <span class="visually-hidden">読み込み中...</span>
                </div>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              閉じる
            </button>
            <a id="downloadBtn" href="#" class="btn btn-primary">
              <i class="bi bi-download"></i> ダウンロード
            </a>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      // ファイル検索機能
      document
        .getElementById("fileSearch")
        .addEventListener("input", function () {
          const searchTerm = this.value.toLowerCase();
          filterFiles();
        });

      // ファイルタイプフィルタ
      document
        .getElementById("fileTypeFilter")
        .addEventListener("change", function () {
          filterFiles();
        });

      function filterFiles() {
        const searchTerm = document
          .getElementById("fileSearch")
          .value.toLowerCase();
        const selectedType = document.getElementById("fileTypeFilter").value;
        const rows = document.querySelectorAll(".file-row");

        rows.forEach(function (row) {
          const filename = row.getAttribute("data-filename");
          const filetype = row.getAttribute("data-type");

          let showRow = true;

          // 検索条件チェック
          if (searchTerm && !filename.includes(searchTerm)) {
            showRow = false;
          }

          // ファイルタイプフィルタチェック
          if (selectedType) {
            if (
              selectedType === "image" &&
              !["jpg", "jpeg", "png", "gif", "webp"].includes(filetype)
            ) {
              showRow = false;
            } else if (selectedType === "pdf" && filetype !== "pdf") {
              showRow = false;
            } else if (
              selectedType === "doc" &&
              !["doc", "docx"].includes(filetype)
            ) {
              showRow = false;
            } else if (
              selectedType === "xls" &&
              !["xls", "xlsx"].includes(filetype)
            ) {
              showRow = false;
            } else if (
              selectedType === "ppt" &&
              !["ppt", "pptx"].includes(filetype)
            ) {
              showRow = false;
            }
          }

          row.style.display = showRow ? "" : "none";
        });
      }

      // ファイル詳細表示
      async function showFileDetails(fileId) {
        const modal = new bootstrap.Modal(
          document.getElementById("fileDetailsModal")
        );
        const content = document.getElementById("fileDetailsContent");
        const downloadBtn = document.getElementById("downloadBtn");

        // ローディング表示
        content.innerHTML = `
    <div class="text-center">
      <div class="spinner-border" role="status">
        <span class="visually-hidden">読み込み中...</span>
      </div>
    </div>
  `;

        // ダウンロードボタンのリンクを設定
        downloadBtn.href = `/materials/download/${fileId}`;

        modal.show();

        try {
          const response = await fetch(`/materials/info/${fileId}`);
          const data = await response.json();

          if (!response.ok) {
            throw new Error(data.error || "エラーが発生しました");
          }

          // ファイルサイズをフォーマット
          const formatFileSize = (bytes) => {
            if (bytes === 0) return "0 Bytes";
            const k = 1024;
            const sizes = ["Bytes", "KB", "MB", "GB"];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return (
              parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i]
            );
          };

          // アップロード日時をフォーマット
          const formatDate = (dateString) => {
            const date = new Date(dateString);
            return date.toLocaleString("ja-JP");
          };

          // ファイルタイプアイコンを取得
          const getFileIcon = (mimetype, filename) => {
            const ext = filename.split(".").pop().toLowerCase();
            if (mimetype.startsWith("image/"))
              return "bi-file-earmark-image text-info";
            if (mimetype === "application/pdf")
              return "bi-file-earmark-pdf text-danger";
            if (mimetype.includes("word"))
              return "bi-file-earmark-word text-primary";
            if (mimetype.includes("excel") || mimetype.includes("spreadsheet"))
              return "bi-file-earmark-excel text-success";
            if (
              mimetype.includes("powerpoint") ||
              mimetype.includes("presentation")
            )
              return "bi-file-earmark-ppt text-warning";
            return "bi-file-earmark text-secondary";
          };

          // 管理者かどうかの判定
          const isAdmin = "<%= session.user.role %>" === "admin";

          let contentHtml = `
      <div class="row">
        <div class="col-12">
          <div class="d-flex align-items-center mb-3">
            <i class="bi ${getFileIcon(
              data.mimetype,
              data.originalname
            )} fs-1 me-3"></i>
            <div>
              <h6 class="mb-1">${data.originalname}</h6>
              <small class="text-muted">${data.mimetype}</small>
            </div>
          </div>
        </div>
      </div>
      
      <div class="row">
        <div class="col-md-6">
          <table class="table table-sm">
            <tbody>
              <tr>
                <th width="40%">ファイル名:</th>
                <td>${data.originalname}</td>
              </tr>
              <tr>
                <th>説明:</th>
                <td>
                  <div id="descriptionDisplay">
                    ${
                      data.description ||
                      '<span class="text-muted">説明なし</span>'
                    }
                  </div>`;

          // 管理者の場合のみ編集機能を追加
          if (isAdmin) {
            contentHtml += `
                  <div id="descriptionEdit" style="display: none;">
                    <textarea id="descriptionInput" class="form-control mb-2" rows="3">${
                      data.description || ""
                    }</textarea>
                    <div class="btn-group btn-group-sm">
                      <button class="btn btn-success" onclick="saveDescription(${
                        data.id
                      })">
                        <i class="bi bi-check"></i> 保存
                      </button>
                      <button class="btn btn-secondary" onclick="cancelEditDescription()">
                        <i class="bi bi-x"></i> キャンセル
                      </button>
                    </div>
                  </div>
                  <button class="btn btn-sm btn-outline-secondary mt-1" onclick="editDescription()">
                    <i class="bi bi-pencil"></i> 編集
                  </button>`;
          }

          contentHtml += `
                </td>
              </tr>
              <tr>
                <th>ファイルサイズ:</th>
                <td>${formatFileSize(data.size)}</td>
              </tr>
              <tr>
                <th>ファイルタイプ:</th>
                <td>${data.mimetype}</td>
              </tr>
              <tr>
                <th>アップロード日時:</th>
                <td>${formatDate(data.uploadedAt)}</td>
              </tr>
            </tbody>
          </table>
        </div>
    `;

          if (data.isImage) {
            contentHtml += `
        <div class="col-md-6">
          <div class="text-center">
            <h6>プレビュー</h6>
            <img 
              src="${data.previewUrl}" 
              alt="${data.originalname}" 
              class="img-fluid rounded shadow-sm"
              style="max-height: 300px; cursor: pointer;"
              onclick="openImageFullscreen('${data.previewUrl}', '${data.originalname}')"
              title="クリックで拡大表示"
            />
            <br>
            <small class="text-muted">画像をクリックで拡大表示</small>
          </div>
        </div>
      `;
          } else {
            contentHtml += `
        <div class="col-md-6">
          <div class="alert alert-info">
            <i class="bi bi-info-circle"></i>
            このファイルはプレビューできません。<br>
            ダウンロードして内容をご確認ください。
          </div>
        </div>
      `;
          }

          contentHtml += "</div>";
          content.innerHTML = contentHtml;
        } catch (error) {
          content.innerHTML = `
      <div class="alert alert-danger">
        <i class="bi bi-exclamation-triangle"></i>
        ${error.message}
      </div>
    `;
        }
      }

      // 画像フルスクリーン表示
      function openImageFullscreen(imageUrl, imageName) {
        const fullscreenModal = document.createElement("div");
        fullscreenModal.className = "modal fade";
        fullscreenModal.innerHTML = `
    <div class="modal-dialog modal-fullscreen">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">${imageName}</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body d-flex justify-content-center align-items-center bg-dark">
          <img src="${imageUrl}" alt="${imageName}" class="img-fluid" style="max-height: 90vh;">
        </div>
      </div>
    </div>
  `;

        document.body.appendChild(fullscreenModal);

        const modal = new bootstrap.Modal(fullscreenModal);
        modal.show();

        // モーダルが閉じられたときに要素を削除
        fullscreenModal.addEventListener("hidden.bs.modal", function () {
          document.body.removeChild(fullscreenModal);
        });
      }

      // 説明編集機能
      function editDescription() {
        document.getElementById("descriptionDisplay").style.display = "none";
        document.getElementById("descriptionEdit").style.display = "block";
        document.querySelector(
          'button[onclick="editDescription()"]'
        ).style.display = "none";
      }

      function cancelEditDescription() {
        document.getElementById("descriptionDisplay").style.display = "block";
        document.getElementById("descriptionEdit").style.display = "none";
        document.querySelector(
          'button[onclick="editDescription()"]'
        ).style.display = "inline-block";
      }

      async function saveDescription(fileId) {
        const description = document.getElementById("descriptionInput").value;

        try {
          const response = await fetch(
            `/materials/update-description/${fileId}`,
            {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ description: description }),
            }
          );

          const result = await response.json();

          if (response.ok) {
            // モーダル内の表示を更新
            document.getElementById("descriptionDisplay").innerHTML =
              description || '<span class="text-muted">説明なし</span>';
            cancelEditDescription();

            // ファイル一覧ページの説明も更新
            updateFileListDescription(fileId, description);

            // 成功メッセージを表示
            const alertDiv = document.createElement("div");
            alertDiv.className =
              "alert alert-success alert-dismissible fade show mt-2";
            alertDiv.innerHTML = `
          <i class="bi bi-check-circle"></i> ${result.message}
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;
            document.getElementById("fileDetailsContent").appendChild(alertDiv);

            // 3秒後にアラートを自動削除
            setTimeout(() => {
              if (alertDiv.parentNode) {
                alertDiv.remove();
              }
            }, 3000);
          } else {
            throw new Error(result.error || "更新に失敗しました");
          }
        } catch (error) {
          alert("エラー: " + error.message);
        }
      }

      // ファイル一覧の説明表示を更新する関数
      function updateFileListDescription(fileId, description) {
        // ファイル一覧のテーブル行を取得（各行のボタンにfileIdが含まれている）
        const fileRows = document.querySelectorAll(".file-row");

        fileRows.forEach((row) => {
          // 各行の詳細ボタンからfileIdを抽出
          const detailButton = row.querySelector(
            'button[onclick*="showFileDetails"]'
          );
          if (detailButton) {
            const onclickValue = detailButton.getAttribute("onclick");
            const match = onclickValue.match(/showFileDetails\((\d+)\)/);
            if (match && match[1] == fileId) {
              // 該当ファイルの行が見つかった場合、説明部分を更新
              const descriptionElement =
                row.querySelector(".fw-medium").nextElementSibling;
              if (descriptionElement) {
                if (description && description.trim()) {
                  const truncatedDescription =
                    description.length > 60
                      ? description.substring(0, 60) + "..."
                      : description;
                  descriptionElement.innerHTML = `
                <i class="bi bi-info-circle me-1"></i>
                ${truncatedDescription}
              `;
                  descriptionElement.className = "text-muted";
                } else {
                  descriptionElement.innerHTML = "説明なし";
                  descriptionElement.className = "text-muted";
                }
              }
              return; // 見つかったので処理終了
            }
          }
        });
      }
    </script>
  </body>
</html>
