# Railway 環境変数設定例
# これらの値をRailway ダッシュボードの Variables タブで設定してください

# ===== 必須設定 =====

# セッション暗号化キー（本番環境では強力なランダム文字列に変更）
# 32文字以上の英数字・記号を組み合わせた文字列を設定してください
SESSION_SECRET=your-very-strong-secret-key-here-min-32-characters-with-special-chars

# Node.js環境設定
NODE_ENV=production

# アプリケーションポート（Railwayが自動設定するため通常は不要）
# PORT=3000

# ===== データベース設定 =====

# PostgreSQL接続URL（Railway PostgreSQLを追加した場合に自動設定される）
# DATABASE_URL=postgresql://username:password@hostname:port/database

# SQLiteデータベースパス（デフォルト）
# DB_PATH=/app/data/agency.db

# ===== セキュリティ設定 =====

# 管理者昇格パスワード（推奨設定）
ADMIN_PROMOTION_PASS=your-admin-promotion-password

# HTTPS無効化（Railway では通常設定不要）
# DISABLE_HTTPS=false

# ===== メール設定（オプション） =====

# SMTP設定
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# 管理者メールアドレス（複数設定可能、カンマ区切り）
ADMIN_EMAILS=admin1@company.com,admin2@company.com

# ===== Railway 固有設定 =====

# Railway 内部ネットワーク設定（自動設定されるため通常は不要）
# RAILWAY_STATIC_URL=
# RAILWAY_GIT_COMMIT_SHA=
# RAILWAY_GIT_BRANCH=

# ===== 設定手順 =====

# 1. Railway ダッシュボードにログイン
# 2. プロジェクトを選択
# 3. 「Variables」タブをクリック
# 4. 「New Variable」で以下の変数を一つずつ追加：

# 最低限必要な設定:
# - SESSION_SECRET (必須)
# - NODE_ENV=production (必須)
# - ADMIN_PROMOTION_PASS (推奨)

# PostgreSQL を使用する場合:
# 1. Railway で「New」→「Database」→「PostgreSQL」を追加
# 2. 自動生成される DATABASE_URL を確認（自動設定される）

# ===== セキュリティ強化のための注意事項 =====

# 1. SESSION_SECRET の生成例:
#    node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#
# 2. 本番環境での必須設定:
#    - SESSION_SECRET: 必須（強力なランダム文字列）
#    - NODE_ENV: production に設定
#    - ADMIN_PROMOTION_PASS: 管理者昇格用パスワード
#
# 3. セキュリティ強化（推奨）:
#    - 初期管理者パスワード（admin/admin）の変更
#    - 定期的な SESSION_SECRET の更新
#    - メール通知の設定
#
# 4. Railway の利点:
#    - 永続ストレージ: SQLiteファイルが保持される
#    - ファイルアップロード: アップロードファイルが永続化
#    - セッション管理: メモリベースセッションが機能
#    - 自動HTTPS: SSL証明書が自動適用
